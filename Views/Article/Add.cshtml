@using Microsoft.AspNetCore.Authorization
@using webFerum.Models.AppContext;
@using webFerum.Models;
@using webFerum.Service;
@using Microsoft.EntityFrameworkCore.Metadata;
@using System.Collections;

@inject IAuthorizationService AuthorizationService
@inject ArticleService articleService

<div class="needs-validation" novalidate>
    <div class="mb-3">
        <label for="Head" class="form-label">Название <span class="error">*</span></label>
        <input type="text" class="form-control" id="Head" name="Head" required>
    </div>
    <div class="mb-3">
        <label for="Description" class="form-label">Описание <span class="error">*</span></label>
        <input type="text" class="form-control" id="Description" name="Description" required>
    </div>
    <div class="mb-3">
        <label for="Face" class="form-label">Обложка <span class="error">*</span></label>
        <input type="text" class="form-control" id="Face" name="Face" required>
    </div>
    <div class="mb-3">
        <label for="Text" class="form-label">Текст <span class="error">*</span></label>
        <textarea class="form-control" id="Text" name="Text" rows="5" required></textarea>
    </div>
    <div class="form-group row">
        <div class="offset-sm-3">
            <p id="ErrorNotification" class="text-danger mb-3"></p>
        </div>
        <div class="offset-sm-3">
            <button id="createSubmit" class="btn btn-primary" type="submit">Создать</button>
        </div>
    </div>
</div>

<script>
    function isEmpty(input) {
        return input.trim().length === 0;
    }
    document.getElementById("createSubmit").addEventListener("click", async e => {
        if (isEmpty(document.getElementById("Head").value)) {
            document.getElementById("ErrorNotification").innerHTML = "Введите название!";
            return;
        }
        else if (isEmpty(document.getElementById("Description").value)) {
            document.getElementById("ErrorNotification").innerHTML = "Введите описание!";
            return;
        }
        else if (isEmpty(document.getElementById("Text").value)) {
            document.getElementById("ErrorNotification").innerHTML = "Введите текст статьи!";
            return;
        }

        e.preventDefault();

        let response;

        response = await fetch("/Article/Create", {
            method: "POST",
            headers: { "Accept": "application/json", "Content-Type": "application/json" },
            body: JSON.stringify({
                Head: document.getElementById("Head").value,
                Description: document.getElementById("Description").value,
                Face: document.getElementById("Face").value,
                Text: document.getElementById("Text").value,
            })
        });

        var responseCopy = response.clone();

        var data = await responseCopy.json();

        var href = '/Article/Selected/'

        href += data.id

        if (response.ok === true) {
            document.location.href = href;
        }
        else {
            document.getElementById("ErrorNotification").innerHTML = "Что-то пошло не так";
        }
       

    });
</script>
